generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model companies {
  id        String   @id @db.VarChar(255)
  name      String   @unique(map: "Companies_name_key") @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime
  stores    stores[]
}

model items {
  id        String   @id @db.VarChar(255)
  name      String   @db.VarChar(255)
  storeId   String   @db.VarChar(255)
  imgUrl    String?  @db.VarChar(500)
  createdAt DateTime @default(now())
  updatedAt DateTime
  category  String   @default("Miscellaneous") @db.VarChar(255)
  unit      String   @default("unit") @db.VarChar(255)
  stores    stores   @relation(fields: [storeId], references: [id], onDelete: Cascade, map: "items_ibfk_1")
  prices    prices[]

  @@index([name], map: "Items_name_idx")
  @@index([storeId], map: "storeId")
}

model prices {
  id        String   @id @db.VarChar(255)
  price     Float    @db.Float
  itemId    String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime
  items     items    @relation(fields: [itemId], references: [id], onDelete: Cascade, map: "prices_ibfk_1")

  @@index([itemId], map: "itemId")
}

model stores {
  id         String    @id @db.VarChar(255)
  name       String    @db.VarChar(255)
  street     String    @db.VarChar(255)
  city       String    @db.VarChar(255)
  postalCode String?   @db.VarChar(255)
  companyId  String    @db.VarChar(255)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime
  province   String?   @db.VarChar(255)
  state      String?   @db.VarChar(255)
  zipCode    String?   @db.VarChar(255)
  country    String    @db.VarChar(255)
  items      items[]
  companies  companies @relation(fields: [companyId], references: [id], onDelete: Cascade, map: "stores_ibfk_1")

  @@index([companyId], map: "companyId")
}
